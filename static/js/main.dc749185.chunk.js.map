{"version":3,"sources":["components/Section/Section.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/AddContact/AddContactForm.styled.jsx","components/AddContact/AddContactForm.jsx","components/AddContact/AddContact.jsx","components/Contacts/FindContact.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/ContactItem.jsx","components/Contacts/ContactList.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["Section","title","children","ButtonPhonebook","styled","button","Button","type","onClick","Form","form","Input","input","Label","label","AddContactForm","inputForms","handleChange","handleSubmit","onSubmit","map","id","name","pattern","required","htmlFor","placeholder","onChange","event","target","value","AddContact","state","number","setState","uuidv4","e","preventDefault","props","reset","currentTarget","app","App","this","Component","FindContact","findContact","ItemListContact","li","ItemContact","span","List","ul","ContactItem","contactDelete","ContactList","contacts","Container","div","filter","contactSubmit","newContact","contactId","prevState","contact","getListContact","normalizedFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","contactsList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc749185.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Section = ({ title, children }) => (\r\n  <div>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ButtonPhonebook = styled.button`\r\n  padding: 10px;\r\n  width: 150px;\r\n  margin: 20px 15px 15px 15px;\r\n  border: 1px solid rgb(42, 136, 136);\r\n\r\n  &:focus {\r\n    background-color: rgb(42, 136, 136);\r\n    color: white;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ButtonPhonebook } from './Button.styled';\r\n\r\nexport const Button = ({ title, type, onClick }) => (\r\n  <ButtonPhonebook type={type} onClick={onClick}>\r\n    {title}\r\n  </ButtonPhonebook>\r\n);\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Form = styled.form`\r\n  width: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-transform: capitalize;\r\n  border: 2px solid #333333;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 10px;\r\n  border: 1px solid rgb(42, 136, 136);\r\n  outline: none;\r\n  &: focus {\r\n    border: 5px solid rgb(42, 136, 136);\r\n  } ;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  padding: 15px 15px 0px 15px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from '../Button/Button';\r\nimport { Form, Input, Label } from './AddContactForm.styled';\r\n\r\nexport const AddContactForm = ({ inputForms, handleChange, handleSubmit }) => {\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      {inputForms.map(({ id, type, name, pattern, title, required }) => (\r\n        <Label htmlFor={id} key={name}>\r\n          <h3>{name}</h3>\r\n          <Input\r\n            id={id}\r\n            type={type}\r\n            name={name}\r\n            pattern={pattern}\r\n            title={title}\r\n            required={required}\r\n            placeholder={name}\r\n            onChange={event => handleChange({ name }, event.target.value)}\r\n          />\r\n        </Label>\r\n      ))}\r\n      <Button title=\"Add contact\" type=\"submit\" />\r\n    </Form>\r\n  );\r\n};\r\n\r\nAddContactForm.propTypes = {\r\n  inputForms: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      type: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      pattern: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      required: PropTypes.string.isRequired,\r\n      placeholder: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n","import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport inputForms from '../data/inputForms.json';\r\nimport { AddContactForm } from './AddContactForm';\r\nimport { App } from '../App/App';\r\n\r\nexport class AddContact extends Component {\r\n  constructor() {\r\n    super();\r\n    this.app = new App();\r\n  }\r\n\r\n  state = {\r\n    id: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ name }, value) => {\r\n    this.setState({ [name]: value, id: uuidv4() });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset(e);\r\n  };\r\n\r\n  reset = e => {\r\n    this.setState({ id: '', name: '', number: '' });\r\n    e.currentTarget.name.value = '';\r\n    e.currentTarget.number.value = '';\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <AddContactForm\r\n        inputForms={inputForms}\r\n        handleChange={this.handleChange}\r\n        handleSubmit={this.handleSubmit}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Input } from '../AddContact/AddContactForm.styled';\r\n\r\nexport const FindContact = ({ title, findContact }) => (\r\n  <div>\r\n    <h3>{title}</h3>\r\n    <Input type=\"text\" onChange={event => findContact(event)} />\r\n  </div>\r\n);\r\n\r\nFindContact.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ItemListContact = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  list-style: none;\r\n`;\r\n\r\nexport const ItemContact = styled.span`\r\n  min-width: 150px;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  padding: 0px;\r\n  font-size: 20px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from '../Button/Button';\r\nimport { ItemListContact, ItemContact } from './Contacts.styled';\r\nexport const ContactItem = props => {\r\n  const { id, name, number, contactDelete } = props;\r\n  return (\r\n    <ItemListContact key={id}>\r\n      <ItemContact>{name}:</ItemContact>\r\n      <ItemContact>{number}</ItemContact>\r\n      <Button\r\n        title={'Delete'}\r\n        type=\"button\"\r\n        onClick={() => contactDelete(id)}\r\n      />\r\n    </ItemListContact>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n  contactDelete: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ContactItem } from './ContactItem';\r\nimport { List } from './Contacts.styled';\r\n\r\nexport const ContactList = props => {\r\n  const { contacts, contactDelete } = props;\r\n  return (\r\n    <List>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItem\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          contactDelete={contactDelete}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.func,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  padding: 15px;\r\n`;\r\n","import { Component } from 'react';\r\nimport { Section } from '../Section/Section';\r\nimport { AddContact } from '../AddContact/AddContact';\r\nimport { FindContact } from '../Contacts/FindContact';\r\nimport { ContactList } from '../Contacts/ContactList';\r\nimport { Container } from './App.styled';\r\n\r\nexport class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  contactSubmit = newContact => {\r\n    this.setState(({ contacts }) => ({ contacts: [newContact, ...contacts] }));\r\n  };\r\n\r\n  contactDelete = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  findContact = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getListContact = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const contactsList = this.getListContact();\r\n    return (\r\n      <Container>\r\n        <h1>Phonebook</h1>\r\n        <Section title={''}>\r\n          <AddContact onSubmit={this.contactSubmit} />\r\n        </Section>\r\n        <Section title={'Contacts'}>\r\n          <FindContact\r\n            title={'Find contacts by name'}\r\n            findContact={this.findContact}\r\n          />\r\n          <ContactList\r\n            contacts={contactsList}\r\n            contactDelete={this.contactDelete}\r\n          />\r\n        </Section>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}